FROM ubuntu:18.04

LABEL maintainer.name="Fabien Zarifian"
LABEL maintainer.email="fabien.zarifian@nuevolia.com"

ENV BASE_LANGUAGE=${BASE_LANGUAGE:-fr_FR} \
    BASE_CHARSET=${BASE_CHARSET:-UTF-8} \
    BASE_TERRAFORM_VERSION=${BASE_TERRAFORM_VERSION:-0.11.10} \ 
    BASE_PACKER_VERSION=${BASE_PACKER_VERSION:-1.3.1} \
    BASE_DOCKER_COMPOSE_VERSION=${BASE_DOCKER_COMPOSE_VERSION:-1.22.0} \
    container=docker

# Set locales
RUN set -xe \
    && BASE_LANG="${BASE_LANGUAGE}.${BASE_CHARSET}" \
    && apt-get update -yqq \
    && DEBIAN_FRONTEND=noninteractive apt-get install -y apt-transport-https ca-certificates curl \
         locales git vim unzip gnupg2 lsb-release sudo software-properties-common python3-pip jq \
    && localedef -i ${BASE_LANGUAGE} -c -f ${BASE_CHARSET} -A /usr/share/locale/locale.alias ${BASE_LANG}
ENV LANG ${BASE_LANG}

# Apt Dependencies
RUN echo "# Installing apt repositories...\n" \
    && echo "## Docker APT Packages" \
    && curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add - \
    && add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable" \
    && echo "# Postgresql APT Packages" \
    && curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | apt-key add - \
    && add-apt-repository "deb [arch=amd64] http://apt.postgresql.org/pub/repos/apt $(lsb_release -cs)-pgdg main"

# Install apt_packages
RUN set -xe \
    && apt-get update -yq \
    && DEBIAN_FRONTEND=noninteractive apt-get -y install docker-ce postgresql-client-10 

RUN python3 -m pip install --upgrade pip setuptools wheel

COPY requirements.txt /root/requirement.txt
RUN pip3 install -r /root/requirement.txt \
  && rm /root/requirement.txt \
  && sed -i -e 's/^\(Defaults\s*requiretty\)/#--- \1/' /etc/sudoers \
  && mkdir -p /etc/ansible \
  && echo -e '[local]\nlocalhost ansible_connection=local' > /etc/ansible/hosts

# Install hashicorp tools (terraform, packer) 
RUN echo "# Installing binary packages...\n" \
    && echo "## Download terraform ${BASE_TERRAFORM_VERSION}..." \
    && curl -LsS "https://releases.hashicorp.com/terraform/${BASE_TERRAFORM_VERSION}/terraform_${BASE_TERRAFORM_VERSION}_linux_amd64.zip" \
      -o /tmp/terraform.zip \
    && echo "## Download packer ${BASE_PACKER_VERSION}..." \
    && curl -LsS "https://releases.hashicorp.com/packer/${BASE_PACKER_VERSION}/packer_${BASE_PACKER_VERSION}_linux_amd64.zip" \
      -o /tmp/packer.zip \
    && cd /usr/bin \
    && echo "## Unzip terraform ${BASE_TERRAFORM_VERSION}..." \
    && unzip /tmp/terraform.zip && rm /tmp/terraform.zip \
    && echo "## Unzip packer ${BASE_PACKER_VERSION}..." \
    && unzip /tmp/packer.zip && rm /tmp/packer.zip \
    && cd \
    && echo "## Install docker-compose (${BASE_DOCKER_COMPOSE_VERSION})" \
    && curl -LsS "https://github.com/docker/compose/releases/download/${BASE_DOCKER_COMPOSE_VERSION}/docker-compose-$(uname -s)-$(uname -m)" \
      -o /usr/bin/docker-compose \
    && chmod +x /usr/bin/docker-compose

# Add app user/group and append it to docker group
RUN groupadd -r app  \ 
  && useradd --no-log-init -m -r -g app app \
  && usermod -aG docker app

# apt-cleanup
RUN rm -rf /var/lib/apt/lists/*

# change user 
USER app

# Check installed as user app
RUN set -xe \
  && curl --version \
  && terraform --version \
  && ansible --version \
  && docker-compose --version \
  && packer --version \
  && which dumb-init
  
ENTRYPOINT [ "/usr/local/bin/dumb-init", "--" ]
